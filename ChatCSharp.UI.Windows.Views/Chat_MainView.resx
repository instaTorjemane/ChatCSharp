<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 8</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>34</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAAAAAAAABoBQAANgAAACAgAAAAAAAAqAgAAJ4FAAAwMAAAAAAAAKgOAABGDgAAKAAAABAA
        AAAgAAAAAQAIAAAAAABAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAACDAQANEdAABUbHQAIMFcABEV7AA0f
        GwBlhXEAk7ugAFBqYwAjRDMAAgEJAAbX/wA64P8Alvn/AAHI/wAAAAsAAyZdAAAAQQAiJhUALTIdABsi
        FgACBwUACpbjACq6/ADq380AiOz/AAC98wAUnfUACj13AD66/wA+t/8AKZX/ABRk0wAIMmIAJbb/ADSY
        8QAimOsAHojQACCx9gBOxP8ACCpaAByB8QAfeeEAIXziAB2B6QAhfPIACyBOADS3/wBMtfsATrf5AFG/
        +wBSt/gAWND/AAAADgAEF04AFWHQABNcwwATXMQAFFrAABFWyQAADTAAIILdAD+p+QBBq/kAQKn5AECq
        +QBEu/8AAAIbAAUAAAALObAAEU2uABFNrQASQacAACufAA0lQQA5sP8AMp3xADSe8AA1ofQAHpb4AAAa
        MAAAKHMAABGCAAAYjgAAFXgADQ8WAAxmzwASh+oAI5PrAAh97wAgTkEAAEKnADm6/wCGx9MAxcmoAJ6X
        lwBen58AF5T7AAAOAAAVZQAAfqG5AECClQCnu7cASaA5ADOdEwAQcccASZe+AP///wCsysQAEY3yACN5
        8wAVWdEAAAEAAEvUSwCCx4YAOJMrACmCKwB30XYAJogHAABb2wD//98AAGG7ACN86wAYWMUADky/AAAN
        KwAGOwYATshOAFzCXABZvVYAha6JAL7bwABUu1QAV8NVAC6rFAAKPt8AIWqdAB1v9gATXdsADVXQAAMm
        qAAHECsAIoIcACWrJgBGvkYAW8hXACGbIQBdu1AAWtFbADO8LgANZxkAEhAkAAMIKQAGCRYABwsYAAgM
        GgAKEycAAAgAAChtKwAngSwAJ44yADOROgA2ekcAACgAAAsXDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwcHBwcHBwcAAAAAAAAAo4+P
        n5+fnwIJBwAAAAAAj5CRgIZ0j5F0lwIHAAAAAI+RhoGBgXOBgZGfBwAAAACPkYF2oXmEhXaGnwcAAAAA
        AI+BaF95bGh2kQcAAAAAAAAAoqNra2WiooUAAAAAAAAAACU+WVlZiQkAAAAAAAAAAABZT0xMTyQJAAAA
        AAAAAAAlP0FAQEBBZgAAAAAAAAAATkAxMTExMWYAAAAAAAAAACUxMzMoMzNmAAAAAAAAAAAXTVkkMCNM
        ZgAAAAAAAAAAazAObDUPF2YAAAAAAAAAAAAmDRo1G2YAAAAAAAAAAAAAAGtra2UAAAAAAAAA8A8AAOAH
        AADAAwAAwAMAAMADAADgBwAA8A8AAPAfAADwHwAA4B8AAOAfAADgHwAA4B8AAOAfAADwPwAA+H8AACgA
        AAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAEAAAAAAQAAAQEAAAABAAAB
        AAAAAAAAAAABAAABAgABAwQAAwUGAAQHCQAGCg0ABgsPAAYMEwAFDhkABBAcAAUSHwAJFR0ADxcaABIZ
        GAAUGxcAGB4XABkgGQAcJB0AHScgAB8pIwAhKiYAISsrACEsMAAgKjcAHSg+ABkpQgAYJ0gAFiVPABEk
        VgAPJloADCZeAA8lYgARJGUADiBuAAckegAFJYAABSaFAAUliwAGJZEAByaWAAgomwAKLZ4ADDKjAA43
        owAQPqcAEkCpABFAqAARQaQAEkKgABZFlwAcR4wAJkl/ADJKcwA5SW0APEtmAD9NXgBDVVUAPlpOADld
        RwAzXEIALmE+ACpmOAAiZzQAG2QrABRiJAAQYR8ADWMcAA1mGQAOaxcAEXEWABR5FQAWfRUAF38WABiB
        FQAZhRYAGYwWAByPGwAhmCAAJ5slAC+kLQA2qjUAPaw7AEGxPwBCskEARbVEAEe3RgBKukkAS71KAE2+
        TABQvk4AVL9SAFe/VgBdwFwAYr1hAGS9ZABsw2wAbsNuAGy4bwBnmW8AZoxzAGOGdwBggnsAV4CAAEl6
        igA9eJMAL3WbABxxpQATbqkAEGyrAA1prQALaK4ADGSvAA5gsAAQXbMAElq2ABRVugAUVL0AFVXAABZV
        wgAXVsUAF1jMABlazwAaXNAAG17QABxhzwAcY84AHWbOABxozwAcas8AGG7PABZxzwAVddEAFXjSABh1
        1QAedNgAIHTaACF03AAhct4AIXDgACFv4wAib+QAI2/nACNx6gAkcusAJXXsACZ47QAmeuwAJnzsACaB
        7AAlhuwAJYnsACSK6QAii+YAIIvfAB6M3AAej9oAHZHZAByU2gAamt0AF5/hABOn5wAQrOwADrHwAAy3
        8wALufUAC7z2AA699gASuvYAGLX2AB6x8wAkrPEALqLyADGd9wAynfcANJ72ADWe9QA2n/QAOKHyADqj
        8wA7pfQAPaf2AECp+ABDrPkARq75AEmx+QBNtfoAT7j6AFG7+gBSvvoAUsL6AFXP+gBW1/oAWtb4AFTS
        9QBazu4AYMjmAGS/2gBst8sAdK+9AHiqsQB9paQAg6mbAIismQCMrpcAkbCXAJi1mgCjtqIArMCrAK/E
        sACyyLQAt823AL/TugDI1rsAzdi9ANLZvgDW278A2t3AAN7fwQDh4cMA5uTJAOrnzgDu69IA8O7WAPLv
        2AD189wA9/bgAPn44wD6+uUA+/vpAPz87AD9/fAA/v7yAP7+8wD+/vQA/v71AP7+9gD+/vcA/v74AP7+
        +QD+/voA/f77AP3+/AD9/v0A/P79APX+/QDw/f0A6/39AP///wDi/f0ABgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgYGBgYGBgYGBgYGBgZsQ0REREREREBAPwYGBgYGBgYGBgYGBgYGBgYGBgYGTFFTVVZXV1dV
        SlFNSEdAagYGBgYGBgYGBgYGBgYGBldTVldZXGBhYlVWV2BcVlFIPwYGBgYGBgYGBgYGBgYGV1ZXWV5h
        Y2ViVuFQY2JfWVVIJCQmJiYoKCYmJiQ+PgZXVlleYmRmZ03d6lZnZWJfWUguMjl6gIB/fn0xLyk+BgZT
        XGFkZ2dY0+7uaGJnZWJcRY90znSRkY+Af30xLycGBk1dY2ZnZlb4+PjVW2dnY11FmHHqb46Zl5GAf30x
        JwYGBk1jZ2dQ3fDw8NpbZ2dlVXKbzurjcrOdmJGAfzI7BgYGBk1mTtPd2trj41VnZ1tFnaHL8fHLi7Sd
        mI+ALAYGBgYGBkxDcXOLi3HTTmJQRZ60i+P+/v5voLSbkXo6BgYGBgYGznOhoKCgoItFQjiZs7ly7erq
        6uNxnZ2EOQYGBgYGBgZznbKzs7Ozsos+OXayuXLdbDw8PGxxiTkGBgYGBgYGcbO0tLS0tLS0tDoGBnJy
        OCgpLCwpKSk6agYGBgYGBgagtLm5u7u7u7m5iz8GBgYoLDIyMjIyKSY/BgYGBgYGb7m7vL29vb29vbyg
        PQYGOiw0NDQ0NDQyKSRqBgYGBgaLvL2+v7+/v7+/vrg7BgYpNHp6enp6ejQ0KT4GBgYGBqG9v8DAwcHB
        wcDAvzsGBjJ8fIODg4N8enoyPmoGBgYGpb/AwcLDw8PDwsHAOwZveoWHh4eHh4aDg3onagYGBgalv8DB
        wcHCwsLBwr07Bm+FjY+ZmpqPjo2Ggyk/BgYGBqOloJ2doKGxqai7pWwGb4+am52dnZ2bmo6HET8GBgYG
        c62xzMzLx8atr7KLBgZvmp2ztLS0tLOdjSIJPwYGBgbNpcbH/f3Hxq2vo28GBm+JtLm0nZd8NicPDAk/
        BgYGBgZzq63GxsbGralyBgYGBg82gH4sEQwYGhsYCWoGBgYGBgZzr8bHx8alcQYGBgYGDwwNFBo/az9A
        HRsMBgYGBgYGBgZxcXFxcXEGBgYGBgY+Pj8/bNNsPz9AGEAGBgYGBgYGBgYGBgYGBgYGBgYGBgYiGj9r
        bGs/Px0YBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgY+FD9saz8aHQYGBgYGBgYGBgYGBgYGBgYGBgYGBgYG
        BgYGPj8/PgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBv///////////////8AH
        //+AAH//AAA//wAAAAEAAAABgAAAAYAAAAHAAAAB4AAAA/AAAAPwAAAH8AAAD+ADAA/gAcAPwAGAB8AB
        gAfAAYADwAEAA8ABAAPAAQADwAMAA8ADAAPgB4AD8A+AB/gfgAf//8AP///gH///+H//////KAAAADAA
        AABgAAAAAQAIAAAAAACACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIIDEACAgIACEkIQBKTUoAMTQxABgc
        GAAIMEIAa21rAIyOjAB7eXsAY2FjABAQEABCRUIAEH2tAFJZUgAheaUACHGtACGOvQA5rs4ASrLOAAht
        nAAQbZwAY2ljAACCtQAhvucASuP/AFrn/wBz7/8AnO//AAAIGAAIltYAAMv/ACHX/wAx1/8ACGmUAAAE
        CAAAGFIAACR7AAgchAAQaZQAGILOABC2/wAhXcYAIWXeABhd3gAYVdYAGEnOABA8xgAILJQAIab/ANb3
        /wD///8A7/v/AABpnAAAMGMAKX3nADGa/wAxnv8AOaL/ADGW9wApgu8AEDScAAgkYwAhit4AIY7nAAhl
        lAAAOIQAKYbvADGS/wA5nv8AKYr3ACFx5wAhad4AEDxzAAAICAAAZZwAOYqtAHO21gAIdbUACEmUACmC
        5wAxlv8AGF21ADmq/wApXXsAKXneACFx3gAhbdYAGFWlACGm7wBCpv8AQqr/ADGa5wBKrv8AWsP/ABhd
        jAAIOJQAIXHWACF13gAhZc4AGFG9AFK6/wBKtv8AUrb/AFK+/wBKrvcAIWnWABBJrQBKsv8AIWHOABhd
        xgAYWb0AEDBrABhNtQBCrv8AGDSEABhJtQAYRa0AEEGtACmW5wAIYYwAABRrABBBpQAQPKUACCiMABB5
        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
        W1xcXFxcXFtbf0BgAAAAAACAPnx8e3t7e3x8fHwxgSYAAAAAAAAAAAAQQTtbW1xcc3NeXl5zc3NcXHh5
        AAAAAHoxd3Z2dnV1dnZ2d3t8fXoAAAAAAAAAAABMO1tcc15ebW1tbW1tbW1ec1xMAAAAACZ2cnJlZWVl
        ZWVycnV2dyYmAAAAAAAAAAARW1xzXm1tbWdoaGhoZ21tbV5MAAAAdGFlcHBwb29vb29wcGVldT4mAAAA
        AAAAAABPXF5tbWdoZmZmZmZmZmZobW1MAAAAJmxvK25uZGRkZG5uK29wZXImJgAAAAAAAABPXm1taGZm
        aWlfX19faWZmZmdMAAAAJitkZGtYWGJiWFhrZGRub3BhcQAAAAAAAABPZmdoZmlfaWlfX19faWlpZmpM
        AAAAQ2RYYldjVlZWVmNXYlhrZCtsJgAAAAAAAABPWltbW1xbW1tbXUBAWl1eX11gAAAAYWJjVjhRPT09
        PVE4VmNiWGRlJQAAAAAAAABPKh9AQUFBQClPEiIhICoyVBJVAAAAUFY4PURER0dHR0RERDhWV1hZJAAA
        AAAAAABMMiAZEhJNTU4dHBohICoyMk8oAAAAUFFER0VSOTk5OVJFR0Q9OFNLAAAAAAAAAAAoQCohGx0z
        NDMdHRogKjIyQUIAAAAAQ0RFOTk6RjtGRUdHPUhJSksAAAAAAAAAAAAAETIqIhwzNDUdGyEgICoyNigA
        AAAANzg5Ojs7PD0sLS4+PyUkAgwCAAAAAAAAAAAAKCkqICAhIhoaGiIhICARKAAAAAAAAQErLC0uLzAx
        JQACBgYDAwYMAAAAAAAAAAAAABYfICEiGhwcGxohIBgjAAAAAAAAAAAkJSYnJR4AAw0EBA0FAwMGAAAA
        AAAAAAAAAAAQGBkaGxwdHBsZGBYAAAAAAAAAAB4MBgIMBgULCQkIDw0FBQMMAwAAAAAAAAAAAAAAABAR
        EhMUEw4VFgAAAAAAAAAAAAAABQ0PCwoJCQkXBA0NBQMAAAAAAAAAAAAAAAAAAAAADg4ODg4AAAAAAAAA
        AAAAAAAHAg0PCAoJCQgLDwQNBQwGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQIECwgK
        CgoICwQNBgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcABQgJCQkKCwUMBgAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQIDBAUGAAYAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///////8AAP///////wAA////////AADwAD////8AAMAAA////wAAgAAAf///AACAAAA///8AAAAA
        AAAADwAAAAAAAAADAACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAADAAAAAAAEAAMAAAAAAAQAA4AAAAAAD
        AADwAAAAAAMAAPgAAAAABwAA/gAAAAAHAAD+AAAAAA8AAPwAAAAAHwAA/AAEAAA/AAD4AAcAAH8AAPgA
        B8AAfwAA8AAD4AB/AADwAAPgAD8AAOAAA8AAPwAA4AADwAAfAADgAAOAAB8AAOAAA4AADwAA4AADgAAP
        AADgAAOAAA8AAOAAA4AADwAA4AADgAAPAADgAAOAAA8AAOAAB4AADwAA8AAHgAAPAADwAA+AAA8AAPgA
        H8AADwAA/AA/wAAPAAD/AH/gAB8AAP/B/+AAHwAA////8AA/AAD////4AH8AAP////4B/wAA////////
        AAD///////8AAP///////wAA////////AAA=
</value>
  </data>
</root>